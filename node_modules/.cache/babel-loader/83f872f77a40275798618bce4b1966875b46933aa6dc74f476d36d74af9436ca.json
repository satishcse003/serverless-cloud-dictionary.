{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\OneDrive\\\\Desktop\\\\awscloudprojects\\\\ztc-projects-intermediate\\\\projects\\\\intermediate\\\\project4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [terms, setTerms] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredTerms, setFilteredTerms] = useState([]);\n  const apiUrl = '<ENTER_YOUR_API_URL>'; // Replace with your API Gateway URL\n\n  const handleSearch = () => {\n    console.log('Fetching data from API...');\n\n    // Construct the URL based on searchTerm\n    const url = searchTerm ? `${apiUrl}/get-definition?term=${encodeURIComponent(searchTerm)}` : `${apiUrl}/get-definition`; // Adjust for getting all terms if no searchTerm\n\n    axios.get(url).then(response => {\n      console.log('API Response:', response.data);\n      setTerms(response.data ? [response.data] : []); // Assuming only one term returned\n      setFilteredTerms(response.data ? [response.data] : []);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cloud Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a term\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-container\",\n      children: filteredTerms.map(term => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: term.term\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: term.definition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, term.term, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IpHAwXua9cpLA4zF42IpkpCKTxo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","terms","setTerms","searchTerm","setSearchTerm","filteredTerms","setFilteredTerms","apiUrl","handleSearch","console","log","url","encodeURIComponent","get","then","response","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","term","definition","_c","$RefreshReg$"],"sources":["C:/Users/Satish/OneDrive/Desktop/awscloudprojects/ztc-projects-intermediate/projects/intermediate/project4/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [terms, setTerms] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredTerms, setFilteredTerms] = useState([]);\r\n\r\n  const apiUrl = '<ENTER_YOUR_API_URL>'; // Replace with your API Gateway URL\r\n\r\n  const handleSearch = () => {\r\n    console.log('Fetching data from API...');\r\n    \r\n    // Construct the URL based on searchTerm\r\n    const url = searchTerm\r\n      ? `${apiUrl}/get-definition?term=${encodeURIComponent(searchTerm)}`\r\n      : `${apiUrl}/get-definition`; // Adjust for getting all terms if no searchTerm\r\n\r\n    axios\r\n      .get(url)\r\n      .then(response => {\r\n        console.log('API Response:', response.data);\r\n        setTerms(response.data ? [response.data] : []);  // Assuming only one term returned\r\n        setFilteredTerms(response.data ? [response.data] : []);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Cloud Dictionary</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a term\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button> {/* Add Search button */}\r\n      </header>\r\n      <div className=\"dictionary-container\">\r\n        {filteredTerms.map((term) => (\r\n          <div key={term.term} className=\"card\">\r\n            <h3>{term.term}</h3>\r\n            <p>{term.definition}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}